package anaa;

import java_cup.runtime.Symbol;

parser code
{:
    private Symbol s;
    
    public void syntax_error(Symbol s){
        this.s = s;
    }

    public Symbol getS(){
        return this.s;
}
:};


terminal Comillas, T_dato, Int, Cadena, If, Else, Do, While,Default, For,Long,DOuble,Comilla,Float,Char,Caracter,Void,
    Igual, Suma, Resta, Asterisco, Division, Op_logico, Op_relacional,Return,Switch,Case,Break,Dos_p,
    Op_atribucion, Op_incremento, Op_booleano, Parentesis_a, Parentesis_c,
    Llave_a, Llave_c, Corchete_a, Corchete_c, Main, P_coma,Coma, Identificador,
    Numero,Cin,Cout,Struct,Punto;
non terminal INICIO, SENTENCIA, DECLARACION, DECLARACION_FOR, IF, IF_ELSE,STRUCT,MAIN,OPERACION_C,
    WHILE, DO_WHILE, FOR, SENTENCIA_BOOLEANA, SENTENCIA_FOR,OPERACION_S,OPERACION_I,RETURN,FUNCION,
    DECLARACION_SWITCH, SENTENCIA_SWITCH, SWITCH,PARAMETROS,TIPO_FUNCION;

start with INICIO;

INICIO ::=
    FUNCION|
    FUNCION STRUCT MAIN|
    FUNCION  MAIN|
    STRUCT FUNCION MAIN| 
    STRUCT|
    STRUCT MAIN|
    MAIN
;
MAIN::=
Int Main Parentesis_a Parentesis_c Llave_a  Llave_c |
    Main Parentesis_a Parentesis_c Llave_a   Llave_c|
Int Main Parentesis_a Parentesis_c Llave_a SENTENCIA Llave_c |
    Main Parentesis_a Parentesis_c Llave_a SENTENCIA  Llave_c

;

STRUCT::= 
Struct Identificador Llave_a Llave_c STRUCT|
Struct Identificador Llave_a Llave_c|
Struct Identificador Llave_a SENTENCIA Llave_c STRUCT|
Struct Identificador Llave_a SENTENCIA Llave_c
;
FUNCION ::= 

            TIPO_FUNCION Parentesis_a PARAMETROS Parentesis_c Llave_a SENTENCIA RETURN  Llave_c|
            TIPO_FUNCION Parentesis_a PARAMETROS Parentesis_c Llave_a  RETURN Llave_c |
            TIPO_FUNCION Parentesis_a Parentesis_c Llave_a SENTENCIA RETURN  Llave_c|
            TIPO_FUNCION Parentesis_a Parentesis_c Llave_a  RETURN Llave_c  |
            Void Identificador  Parentesis_a PARAMETROS Parentesis_c Llave_a SENTENCIA   Llave_c|
            Void Identificador  Parentesis_a Parentesis_c Llave_a SENTENCIA Llave_c
            
        
            
           
;
TIPO_FUNCION::=
    Int Identificador|
    Long Identificador|
    DOuble Identificador|
    Cadena Identificador    
;

RETURN::=
     
        Return Identificador P_coma|
        Return Numero P_coma|
        Return DECLARACION 
;

PARAMETROS::=   Int Identificador |
                DOuble Identificador|
                Cadena Identificador| 
                Long Identificador |
                Int Identificador Coma PARAMETROS|
                DOuble Identificador Coma PARAMETROS|
                Cadena Identificador Coma PARAMETROS| 
                Long Identificador Coma PARAMETROS 
            

;
SENTENCIA ::= 
    SENTENCIA DECLARACION |
    DECLARACION |
    SENTENCIA IF | 
    IF |
    SENTENCIA IF_ELSE |
    IF_ELSE |
    SENTENCIA WHILE |
    WHILE |
    SENTENCIA DO_WHILE
    DO_WHILE |
    SENTENCIA FOR |
    FOR|SWITCH|
    SENTENCIA SWITCH
;
   
DECLARACION ::= 
    Struct Punto|
   
   Identificador Parentesis_a Parentesis_c P_coma|

    /*byte*/
    T_dato Identificador P_coma | 
    T_dato Identificador Op_atribucion Numero P_coma |
    T_dato Identificador Igual Identificador P_coma |
    T_dato Identificador Op_incremento P_coma | 
    T_dato Op_incremento Identificador P_coma |
    T_dato Identificador Corchete_a Numero Corchete_c P_coma|
    T_dato Asterisco Identificador|

    /*int*/ 

    Int Identificador P_coma | 
    Int Identificador Op_atribucion Numero P_coma |
    Int Identificador Igual Identificador P_coma |
    Int Identificador Op_incremento P_coma | 
    Int Op_incremento Identificador P_coma |
    Int Identificador Igual Numero P_coma|
    Int Identificador Corchete_a Numero Corchete_c P_coma|
    Int Asterisco Identificador|
    Int Identificador Igual OPERACION_I P_coma|
    
    /*DOuble*/ 

    DOuble Identificador P_coma | 
    DOuble Identificador Op_atribucion Numero P_coma |
    DOuble Identificador Igual Identificador P_coma |
    DOuble Identificador Igual Numero P_coma |
    DOuble Identificador Op_incremento P_coma | 
    DOuble Op_incremento Identificador P_coma |
    DOuble Identificador Corchete_a Numero Corchete_c P_coma|
    DOuble Asterisco Identificador P_coma|
    DOuble Identificador Igual OPERACION_I P_coma|


  /*long*/ 

    Long Identificador P_coma | 
    Long Identificador Op_atribucion Numero P_coma |
    Long Identificador Igual Identificador P_coma |
    Long Identificador Op_incremento P_coma | 
    Long Op_incremento Identificador P_coma |
    Long Identificador Igual Numero P_coma |
    Long Identificador Corchete_a Numero Corchete_c P_coma|
    Long Asterisco Identificador|
    Long Identificador Igual OPERACION_I P_coma|

/*Float*/ 

    Float Identificador P_coma | 
    Float Identificador Op_atribucion Numero P_coma |
    Float Identificador Igual Identificador P_coma |
    Float Identificador Op_incremento P_coma | 
    Float Op_incremento Identificador P_coma |
    Float Identificador Igual Numero P_coma |
    Float Identificador Corchete_a Numero Corchete_c P_coma|
    Float Asterisco Identificador|
    Float Identificador Igual OPERACION_I P_coma|

    /*cadena*/

    Cadena Identificador P_coma | 
    Cadena Identificador Corchete_a Numero Corchete_c P_coma|
    Cadena  Identificador Igual OPERACION_S P_coma|
    Identificador Igual OPERACION_S P_coma|
    Cadena Identificador Op_atribucion Comillas Comillas P_coma |
    Cadena Identificador Igual Comillas Comillas P_coma |
    Cadena Identificador Op_atribucion Comillas Identificador Comillas P_coma |
    Cadena Identificador Igual Comillas Identificador Comillas P_coma| 
    
   
   
    
    /* char*/
    
    Char Identificador P_coma | 
    Char Identificador Corchete_a Numero Corchete_c P_coma|
    Char Identificador Igual OPERACION_C P_coma|
    Char Identificador Op_atribucion Comilla Caracter Comilla P_coma |
    Char Identificador Igual Comilla Caracter Comilla P_coma| 
       
    Cin Op_relacional Identificador P_coma|
    Cout Op_relacional Identificador P_coma |
    Cout Op_relacional  Comillas Identificador Comillas  P_coma        
    
;




OPERACION_I::= 

Numero Resta Numero|
Numero Asterisco Numero|
Numero Division Numero|
Numero Suma Numero|
Identificador Suma Numero|
Identificador Asterisco Numero|
Identificador Division Numero|
Identificador Resta Numero|
Numero Suma Identificador|
Numero Division Identificador|
Numero Resta Identificador|
Numero Asterisco Identificador|
Identificador Suma OPERACION_I|
Identificador Resta OPERACION_I|
Identificador Division OPERACION_I|
Identificador Asterisco OPERACION_I

;

OPERACION_S::= 
 
Comillas Identificador Comillas Resta Comillas Identificador Comillas OPERACION_S |
Comillas Identificador Comillas Asterisco Comillas Identificador Comillas|
Comillas Identificador Comillas Division Comillas Identificador Comillas|
Comillas Identificador Comillas Suma Comillas Identificador Comillas|
Identificador Suma Comillas Identificador Comillas|
Identificador Asterisco Comillas Identificador Comillas|
Identificador Division Comillas Identificador Comillas|
Identificador Resta Comillas Identificador Comillas|
Comillas Identificador Comillas Suma Identificador|
Comillas Identificador Comillas Division Identificador|
Comillas Identificador Comillas Resta Identificador|
Comillas Identificador Comillas Asterisco Identificador|
Identificador Suma OPERACION_S|
Identificador Resta OPERACION_S|
Identificador Division OPERACION_S|
Identificador Asterisco OPERACION_S|
Comillas Numero Comillas Resta Comillas Numero Comillas|
Comillas Numero Comillas Asterisco Comillas Numero Comillas|
Comillas Numero Comillas Division Comillas Numero Comillas|
Comillas Numero Comillas Suma Comillas Numero Comillas|
Identificador Suma Comillas Numero Comillas|
Identificador Asterisco Comillas Numero Comillas|
Identificador Division Comillas Numero Comillas|
Identificador Resta Comillas Numero Comillas|
Comillas Numero Comillas Suma Identificador|
Comillas Numero Comillas Division Identificador|
Comillas Numero Comillas Resta Identificador|
Comillas Numero Comillas Asterisco Identificador


;

OPERACION_C::= 
 
Comilla Caracter Comilla Resta Comilla Caracter Comilla OPERACION_C |
Comilla Caracter Comilla Asterisco Comilla Caracter Comilla|
Comilla Caracter Comilla Division Comilla Caracter Comilla|
Comilla Caracter Comilla Suma Comilla Caracter Comilla|
Identificador Suma Comilla Caracter Comilla|
Identificador Asterisco Comilla Caracter Comilla|
Identificador Division Comilla Caracter Comilla|
Identificador Resta Comilla Caracter Comilla|
Identificador Suma OPERACION_S|
Identificador Resta OPERACION_S|
Identificador Division OPERACION_S|
Identificador Asterisco OPERACION_S|
Comilla Caracter Comilla Suma Identificador|
Comilla Caracter Comilla Division Identificador|
Comilla Caracter Comilla Resta Identificador|
Comilla Caracter Comilla Asterisco Identificador

;



IF ::= If Parentesis_a SENTENCIA_BOOLEANA Parentesis_c Llave_a SENTENCIA Llave_c |
      If Parentesis_a SENTENCIA_BOOLEANA Op_logico SENTENCIA_BOOLEANA  SENTENCIA_BOOLEANA Parentesis_c Llave_a SENTENCIA Llave_c
      ;
SENTENCIA_BOOLEANA ::= 
    Op_booleano | 
    Identificador Op_relacional Op_booleano |
    Identificador Op_relacional Numero |
    Numero Op_relacional Identificador|
    Identificador Op_relacional Identificador |
    Identificador Op_relacional Comillas Comillas |
    Identificador Op_relacional Comillas Identificador Comillas
;
IF_ELSE ::= If Parentesis_a SENTENCIA_BOOLEANA Parentesis_c Llave_a SENTENCIA Llave_c Else Llave_a SENTENCIA Llave_c
;
WHILE ::= While Parentesis_a SENTENCIA_BOOLEANA Parentesis_c Llave_a SENTENCIA Llave_c
;
DO_WHILE ::= Do Llave_a SENTENCIA Llave_c While Parentesis_a SENTENCIA_BOOLEANA Parentesis_c P_coma
;
FOR ::= For Parentesis_a SENTENCIA_FOR Parentesis_c Llave_a SENTENCIA Llave_c
;
SENTENCIA_FOR ::=
    Int Identificador Igual Numero P_coma SENTENCIA_BOOLEANA P_coma DECLARACION_FOR |
    Identificador Igual Numero P_coma SENTENCIA_BOOLEANA P_coma DECLARACION_FOR
;

DECLARACION_FOR ::= 
    Identificador Op_atribucion Numero |
    Identificador Op_incremento | 
    Op_incremento Identificador
;
SWITCH::= Switch Parentesis_a Identificador Parentesis_c Llave_a SENTENCIA_SWITCH Llave_c

;

SENTENCIA_SWITCH::=
    Case Numero Dos_p DECLARACION_SWITCH |
    Case Comillas Identificador Comillas Dos_p DECLARACION_SWITCH |
    Case Numero Dos_p DECLARACION_SWITCH SENTENCIA_SWITCH |
    Case Comillas Identificador Comillas Dos_p DECLARACION_SWITCH SENTENCIA_SWITCH |
    Default Dos_p SENTENCIA 
;

DECLARACION_SWITCH::= SENTENCIA Break P_coma
;